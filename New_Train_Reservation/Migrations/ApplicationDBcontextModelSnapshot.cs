// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using New_Train_Reservation.Data;

#nullable disable

namespace New_Train_Reservation.Migrations
{
    [DbContext(typeof(ApplicationDBcontext))]
    partial class ApplicationDBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("New_Train_Reservation.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("New_Train_Reservation.Models.Admin_Tickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdminID")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pickup_Station")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seat_Number")
                        .HasColumnType("int");

                    b.Property<int>("Ticket_Classes")
                        .HasColumnType("int");

                    b.Property<double>("Ticket_Money")
                        .HasColumnType("float");

                    b.Property<DateTime>("Time_Pickup")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainID")
                        .HasColumnType("int");

                    b.Property<int>("Train_Coach_Number")
                        .HasColumnType("int");

                    b.Property<int?>("TrainsID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdminID");

                    b.HasIndex("TrainsID");

                    b.ToTable("Admin_Tickets");
                });

            modelBuilder.Entity("New_Train_Reservation.Models.Payment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("Booking_Fee")
                        .HasColumnType("float");

                    b.Property<int>("CVV")
                        .HasColumnType("int");

                    b.Property<int>("Card_Number")
                        .HasColumnType("int");

                    b.Property<string>("Current_bank_account")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expiration_date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Total_amount_in_card")
                        .HasColumnType("float");

                    b.Property<string>("User_Phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("usersID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("usersID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("New_Train_Reservation.Models.Suggestions_Complaints", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Message_Type")
                        .HasColumnType("int");

                    b.Property<string>("Phone_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UsersID");

                    b.ToTable("Suggestions_Complaints");
                });

            modelBuilder.Entity("New_Train_Reservation.Models.Trains", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Date_Pickup")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Driver_ID")
                        .HasColumnType("int");

                    b.Property<int>("Number_of_available_tickets")
                        .HasColumnType("int");

                    b.Property<int?>("Number_of_stoppages")
                        .HasColumnType("int");

                    b.Property<string>("Pickup_Station")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Train_Number")
                        .HasColumnType("int");

                    b.Property<int>("classes")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("New_Train_Reservation.Models.User_Tickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pickup_Station")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seat_Number")
                        .HasColumnType("int");

                    b.Property<string>("Ticket_Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Ticket_Money")
                        .HasColumnType("float");

                    b.Property<DateTime>("Time_Pickup")
                        .HasColumnType("datetime2");

                    b.Property<int>("Train_Coach_Number")
                        .HasColumnType("int");

                    b.Property<int>("Train_Number")
                        .HasColumnType("int");

                    b.Property<int>("usersid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("usersid");

                    b.ToTable("User_Tickets");
                });

            modelBuilder.Entity("New_Train_Reservation.Models.Users", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("National_Pass_Number")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int?>("Number_of_purchased_tickets")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("New_Train_Reservation.Models.Admin_Tickets", b =>
                {
                    b.HasOne("New_Train_Reservation.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("New_Train_Reservation.Models.Trains", "Trains")
                        .WithMany()
                        .HasForeignKey("TrainsID");

                    b.Navigation("Admin");

                    b.Navigation("Trains");
                });

            modelBuilder.Entity("New_Train_Reservation.Models.Payment", b =>
                {
                    b.HasOne("New_Train_Reservation.Models.Users", "users")
                        .WithMany()
                        .HasForeignKey("usersID");

                    b.Navigation("users");
                });

            modelBuilder.Entity("New_Train_Reservation.Models.Suggestions_Complaints", b =>
                {
                    b.HasOne("New_Train_Reservation.Models.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("New_Train_Reservation.Models.User_Tickets", b =>
                {
                    b.HasOne("New_Train_Reservation.Models.Users", "users")
                        .WithMany("TicketId")
                        .HasForeignKey("usersid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("New_Train_Reservation.Models.Users", b =>
                {
                    b.Navigation("TicketId");
                });
#pragma warning restore 612, 618
        }
    }
}
